[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "manuel",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books."
  },
  {
    "objectID": "01_introduction.html",
    "href": "01_introduction.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming. # Introduction\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "04_analyser_une_demande.html#étapes-de-lanalyse-de-demande",
    "href": "04_analyser_une_demande.html#étapes-de-lanalyse-de-demande",
    "title": "4  Comment analyser une demande ?",
    "section": "4.1 Étapes de l’analyse de demande",
    "text": "4.1 Étapes de l’analyse de demande\n\n4.1.1 Prendre connaissance de la demande et s’assurer que toutes les informations nécessaires à la gestion de la confidentialité ont été fournies.\nLes informations nécessaires sont :\n\nune description précise des tableaux que votre interlocuteur souhaite diffuser :\n\nsur quel champ de la population les tableaux sont-ils construits ?\nquelles sont les variables descriptives (de croisement) ?\nquelle est la variable de réponse pour chacun des tableaux ?\nles tableaux sont-ils des tableaux de fréquence ou bien des tableaux de volume ?\nparmi l’ensemble des variables de croisement, certaines sont-elles hiérarchiques ? Les emboîtements ont-ils été fournis ?\n\nune description précise des liens éventuels entre les variables ou tableaux :\n\ncertaines variables ou modalités sont-elles reliées par une équation ?\ndes équations/liens ont-ils été fournis ?\nde fortes corrélations existent-elles entre certaines variables de réponse ?\n\n\n\n\n4.1.2 La demande peut-elle être séparée en plusieurs sous-demandes indépendantes ?\n\nDes tableaux portant sur des variable de réponse différentes, non liées par une équation ou par un lien de corrélation fort, peuvent être traités séparément.\nDes tableaux construits sur des champs différents et non complémentaires peuvent être traités séparément.\nY a-t-il au contraire des tableaux qui doivent être traités dans dans le même temps ?\n\nrassembler les tableaux partageant la même variable de réponse et le même champ, car ils partagent a minima le même super-total (n.b. on ne les fusionne pas on les rassemblent juste pour les traiter ensemble)\ndéterminer les tableaux liés entre eux par leurs marges\ndéterminer les tableaux liés entre eux car “additifs”\ndéterminer les tableaux liés entre eux par la présence potentielle de hiérarchies non-emboîtées\n\n\nChaque sous-demande doit faire l’objet d’un traitement à part, en suivant les mêmes étapes.\n\n\n4.1.3 Lister les tableaux nécessaires pour la pose de secret\nRassembler en un seul tableau les tableaux liés car “additifs”.\nSéparer en plusieurs tableaux un tableau qui contiendrait des sous-totaux non-emboîtés.\n\n\n4.1.4 Construire les hiérarchies éventuellement nécessaires\n\n\n4.1.5 Construire les tableaux à partir des tableaux fournis par l’utilisateur (si besoin)\n\n\n4.1.6 Procéder à la pose du masque en opérant comme indiqué dans le chapitre 6 Fiches pratiques."
  },
  {
    "objectID": "04_analyser_une_demande.html#détecter-les-liens",
    "href": "04_analyser_une_demande.html#détecter-les-liens",
    "title": "4  Comment analyser une demande ?",
    "section": "4.2 Détecter les liens",
    "text": "4.2 Détecter les liens\nIl y a deux principaux types de liens sur les variables réponse :\n\nles hiérarchies\n\nemboîtées\nnon-emboîtées\n\nles équations du type A = B + C\n\nentre les variables réponses\nau niveau des champs"
  },
  {
    "objectID": "04_analyser_une_demande.html#passer-de-la-liste-de-diffusion-à-la-liste-de-protection",
    "href": "04_analyser_une_demande.html#passer-de-la-liste-de-diffusion-à-la-liste-de-protection",
    "title": "4  Comment analyser une demande ?",
    "section": "4.3 Passer de la liste de diffusion à la liste de protection",
    "text": "4.3 Passer de la liste de diffusion à la liste de protection\nLa liste de diffusion est la liste de tableaux qui sera effectivement publiée. Elle diffère de la liste de protection qui elle est à établir en fonction des liens entre les différents tableaux. En effet, pour poser le secret pertinemment il faut renseigner les différents liens pour que l’algorithme en tienne compte.\nDe plus, si les données sont sous forme de micro-données il faut calculer les agrégats qui seront diffusés pour établir la liste de diffusion. En effet, nous ne posons pas le secret sur les micro-données mais sur les agrégats. Pour ce faire la fonction tabul_fun_group permet de facilement construire les tables agrégées sous le bon format pour les mettre en entrée de rtauargus."
  },
  {
    "objectID": "04_analyser_une_demande.html#fiches-exemples-danalyse-de-demandes",
    "href": "04_analyser_une_demande.html#fiches-exemples-danalyse-de-demandes",
    "title": "4  Comment analyser une demande ?",
    "section": "4.4 Fiches exemples d’analyse de demandes",
    "text": "4.4 Fiches exemples d’analyse de demandes\nExemple 1 :\nDemande - on souhaite diffuser 4 tableaux\n\nT1 : population par âge (5 classes), par sexe et par département\nT2 : population par sexe, par diplôme et par département\nT3 : population par catégorie catégorie socio-professionnelle, par statut d’activité et par département\nT4 : population par âge, par sexe et par statut d’activité\n\nEn formalisant :\n\nT1 : pop x {age x sexe x dep}\nT2 : pop x {sexe x dip x dep}\nT3 : pop x {socpro x act x dep}\nT4 : pop x {age x sexe x act}\n\nAnalyse\nLes tableaux partagent le même champ (sous-entendu) et le même indicateur (population), ils sont donc liés a minima par le total, donc il n’y a pas de sous-demande indépendante.\nDe plus, certains tableaux ont des variables de croisement communes, il y a un lien sur les marges, les liens n’en sont que renforcés.\nLes variables entre elles n’ont pas de lien hiérarchique (le seul niveau géographique est le département), donc les tableaux ne doivent pas être fusionnés.\nFinalement, la liste des tableaux à protéger est identique à la liste des tableaux à diffuser.\nExemple 2 :\nDemande - on souhaite diffuser 7 tableaux\n\nT1 : population par âge (5 classes), par sexe et par département\nT2 : population par sexe, par diplôme et par département\nT3 : population par catégorie catégorie socio-professionnelle, par statut d’activité et par département\nT4 : population par âge, par sexe et par statut d’activité\nT5 : population par âge (5 classes), par sexe et par région\nT6 : population par sexe, par diplôme et par région\nT7 : population par catégorie socio-professionnelle, par statut d’activité et par région\n\nEn formalisant :\n\nT1 : pop x {age x sexe x dep}\nT2 : pop x {age x dip x dep}\nT3 : pop x {socpro x act x dep}\nT4 : pop x {age x sexe x act}\nT5 : pop x {age x sexe x reg}\nT6 : pop x {sexe x dip x reg}\nT7 : pop x {socpro x act x reg}\n\nAnalyse\nLes tableaux partagent le même champ (sous-entendu) et le même indicateur (population), ils sont donc liés a minima par le total, donc il n’y a pas de sous-demande indépendante.\nDe plus, certains tableaux ont des variables de croisement communes, il y a un lien sur les marges, les liens n’en sont que renforcés.\nDeux variables ont un lien hiérarchique (région &gt; département), lorsque l’information est hiérarchisée (et emboîtée) il faut la traiter dans un même tableau en créant une variable hiérarchique qu’on peut appeler par exemple GEO. De plus, on peut fusionner les tableaux partageant les mêmes variables de croisement.\nLa liste des tableaux à protéger est donc la suivante :\n\nT1 : pop x {age x sexe x GEO}\nT2 : pop x {sexe x dip x GEO}\nT3 : pop x {socpro x act x GEO}\nT4 : pop x {age x sexe x act}\noù GEO est une variable hiérarchique emboîtant régions et départements\n\nExemple 3 :\nDemande - on souhaite diffuser 4 tableaux\n\nT1 : population par âge (3 classes : &lt;25, 25-55, +55) et par département\nT2 : population par âge (5 classes : &lt;15, 15-25, 25-45, 45-65, +65), par sexe et par département\nT3 : population par âge (3 classes : &lt;25, 25-55, +55) et par région\nT4 : population par âge (5 classes : &lt;15, 15-25, 25-45, 45-65, +65), par sexe et par région\n\nEn formalisant :\n\nT1 : pop x {age_3 x dep}\nT2 : pop x {age_5 x sexe x dep}\nT3 : pop x {age_3 x reg}\nT4 : pop x {age_5 x sexe x reg}\n\nAnalyse\nLes tableaux partagent le même champ (sous-entendu) et le même indicateur (population), ils sont donc liés a minima par le total, donc il n’y a pas de sous-demande indépendante.\nDe plus, certains tableaux ont des variables de croisement communes, il y a un lien sur les marges, les liens n’en sont que renforcés.\nDeux variables ont un lien hiérarchique (région &gt; département) :\n\nles tableaux T1 et T3 partagent les mêmes variables de croisement et peuvent donc être fusionnés\nles tableaux T2 et T4 partagent les mêmes variables de croisement et peuvent donc être fusionnés\n\nLa variable âge est ventilée différemment entre T1 et T2 (ainsi qu’entre T3 et T4). On doit donc se demander si les différentes modalités de l’âge sont emboîtées. On peut présenter la hiérarchie ainsi :\n\n&lt;25\n@&lt;15\n@15-25\n25-55\n@25-45\n@45-55\n+55\n@55-65\n+65\n\nIl n’est pas possible d’insérer la modalité 45-65 dans cette hiérarchie, il s’agit donc d’un cas de hiérarchie non-emboîtée. En effet, 45-65 = 45-55 + 55-65 est un agrégat non-emboîté qui devra être traité en construisant un tableau séparé.\nUne première étape d’analyse mène à la liste des tableaux à protéger suivante :\n\nT1 : pop x {AGE_hrc_princ x GEO}\nT1bis : pop x {AGE_hrc_spe x GEO}\nT2 : pop x {AGE_hrc_princ x sexe x GEO}\nT2bis : pop x {AGE_hrc_spe x sexe x GEO}\noù GEO est une variable hiérarchique emboîtant régions et départements\noù AGE_hrc_princ (hiérarchie principale) est une variable hiérarchique emboîtant l’ensemble des catégories d’âge hors 45-65\noù AGE_hrc_spe (agrégat spécial) a les modalités : 45-65 = 45-55 + 55-65\n\nOn remarque que T1 est en réalité déjà “contenu” dans T2. Puisque le croisement AGE_hrc_princ x GEO est présente dans T2. De même T1bis est contenu dans T2bis. On peut donc regrouper ces tableau. Finalement, on se retrouve avec cette liste de tableaux à protéger :\n\nT1 : pop x {AGE_hrc_princ x sexe x GEO}\nT2 : pop x {AGE_hrc_spe x sexe x GEO}\noù GEO est une variable hiérarchique emboîtant régions et départements\noù AGE_hrc_princ (hiérarchie principale) est une variable hiérarchique emboîtant l’ensemble des catégories d’âge hors 45-65\noù AGE_hrc_spe (agrégat spécial) a les modalités : 45-65 = 45-55 + 55-65"
  },
  {
    "objectID": "06_fiches_pratiques.html#poser-le-secret-sur-un-tableau",
    "href": "06_fiches_pratiques.html#poser-le-secret-sur-un-tableau",
    "title": "6  Fiches pratiques",
    "section": "6.1 Poser le secret sur un tableau",
    "text": "6.1 Poser le secret sur un tableau\nPoser un masque de secret sur un tableau comprend les étapes suivantes :\n\nPoser le secret primaire en créant des variables indicatrices :\n\n\nPour chacun des tableaux on ajoute une variable booléenne indiquant si la cellule est problématique (TRUE) ou non (FALSE), au regarde des règles pertinentes à appliquer comme : la règle de fréquence is_secret_freq ou la règle de dominance is_secret_dom\nEnsuite, on crée une variable résumant le secret primaire is_secret_prim :\n\nis_secret_prim = is_secret_freq si seule la règle de fréquence doit s’appliquer\nis_secret_prim = is_secret_freq | is_secret_dom si les deux règles doivent s’appliquer\n\n\nVoici un exemple de code pour les règles classiques en statistiques d’entreprises :\n\nT0_detect &lt;- T0 %&gt;% \n  mutate(\n      is_secret_freq = FREQ &gt; 0 & FREQ &lt; 3,\n      is_secret_dom = (VALUE != 0) & (MAX &gt; 0.85*VALUE)\n    ) %&gt;% \n  mutate(\n    is_secret_prim = is_secret_freq | is_secret_dom\n  )\n\n\nCalculer le nombre de cellules détectées comme à risque\nPoser le secret secondaire en utilisant le package rtauargus en utilisant la fonction tab_rtauargus().\n\nLa fonction tab_rtauargus() requiert les arguments suivants :\n\ntabular: la table à protéger\ndir_name: le nom du répertoire où les fichiers seront sauvegardés\nfiles_name: le nom utilisé pour nommer les fichiers (chaque fichier a une extension différente);\nexplanatory_vars: le nom des variables de croisements présents dans la table;\nsecret_var: le nom de la variable indiquant si une cellule est à risque ou non (secret primaire);\nvalue = nom de la variable de réponse;\nfreq = nom de la variable d’effectifs;\ntotcode: le code utilisé pour indiquer le total pour chacune des variables de croisements (explanatory_vars).\n\n\nT0_masq &lt;- tab_rtauargus(\n  T0_detect,\n  dir_name = \"tauargus_files/exo2\",\n  files_name = \"T0\",\n  explanatory_vars = c(\"ACTIVITY\",\"SIZE\"),\n  secret_var = \"is_secret_prim\",\n  value = \"VALUE\",\n  freq = \"FREQ\",\n  totcode = c(ACTIVITY=\"Total\",SIZE=\"Total\"),\n  verbose = FALSE\n)\n\n\nCalculer le nombre de cellules selon leur statut final en suivant la norme européenne :\n\n\nA les cellules en secret primaire à cause de la règle de fréquence\nB les cellules en secret primaire à cause de la règle de dominance (dans le futur ces cellules pourraient être notées O)\nD les cellules concernées par le secret secondaire\nV les cellules non touchées par le secret, c’est-à-dire les cellules qui pourront être diffusées.\n\nPour faire le bilan du secret, le mieux est de modifier la variable Status fournie par Tau-Argus. En effet, cette variable ne permet pas de faire la distinction entre l’origine du secret primaire (fréquence ou dominance).\n\nT0_masq &lt;- T0_masq %&gt;% \n  mutate(\n    statut_final = case_when(\n      is_secret_freq ~ \"A\",\n      is_secret_dom ~ \"B\",\n      TRUE ~ Status,\n    )\n  )\n\nAfin de bien appréhender l’impact du secret posé, on va non seulement compter le nombre de cellules masquées, mais aussi calculer la valeur des cellules masquées.\n\nT0_masq %&gt;% \n  group_by(statut_final) %&gt;% \n  summarise(\n    n_cell = n(),\n    val_cell = sum(VALUE)\n  ) %&gt;%\n  mutate(\n    pc_n_cell = n_cell/sum(n_cell)*100,\n    pc_val_cell = val_cell/sum(val_cell)*100\n  )\n\nUn bon indicateur de la qualité du secret secondaire posé consiste à rapporter le nombre de cellules supprimées lors de cette phase au nombre de cellules détectées comme à risque (secret primaire). Par exemple, si nous avons un ratio de \\(30/(46+7) = 0.57\\). Alors, pour protéger une case en secret primaire, tau-argus a dû masquer 0.6 cellule(s). Ce qui est très peu. En effet, pour un tableau à deux dimensions, la présence d’un secret primaire engendre la suppression d’au moins 3 cellules supplémentaires. Ici, le ratio indique ici que nombre de cellules en secret primaire se protègent entre elles."
  },
  {
    "objectID": "06_fiches_pratiques.html#prendre-en-compte-une-variable-hiérarchique",
    "href": "06_fiches_pratiques.html#prendre-en-compte-une-variable-hiérarchique",
    "title": "6  Fiches pratiques",
    "section": "6.2 Prendre en compte une variable hiérarchique",
    "text": "6.2 Prendre en compte une variable hiérarchique\nReprenons ici l’exemple de la variable geo qui est une variable hiérarchique puisqu’il existe des emboîtements entre les différents niveaux.\n\n\n\n\nflowchart LR\n  A[Pays] --&gt; B[Nord]\n  A --&gt; C[Ouest]\n  A --&gt; D[Est]\n  A --&gt; E[Sud]\n  B --&gt; F[N1]\n  B --&gt; G[N2]\n  B --&gt; H[N3]\n  C --&gt; I[O1]\n  C --&gt; J[O2]\n  C --&gt; K[O3]\n  C --&gt; L[O4]\n  D --&gt; M[E1]\n  D --&gt; N[E2]\n  D --&gt; O[E3]\n  E --&gt; P[S1]\n  E --&gt; Q[S2]\n\n\n\n\n\nPour prendre en compte cette hiérarchie il faut d’abord pouvoir la représenter de telle sorte que Tau-Argus comprenne les différents emboîtements présents.\n\n6.2.1 Première option\nLa première option consiste à créer le fichier nécessaire (extension .hrc) à la main. Ceci est tout à fait pertinent si la hiérarchie n’est pas trop étendue.\nTau-Argus attend en effet un type de fichier bien particulier, dont l’extension est .hrc. Il s’agit d’un simple fichier texte où les différents emboîtements sont écrits les uns en-dessous des autres. Un symbole (le @) est utilisé pour préciser le niveau de chacun des emboîtements au sein de la hiérarchie.\nDans notre exemple on écrirait le fichier de la façon suivante :\n\nNord\n@N1\n@N2\n@N3 \nOuest \n@O1 \n@O2 \n@O3 \n@O4 \nEst\n@E1 \n@E2 \n@E3 \nSud \n@S1 \n@S2\n\nOn remarque que le total Pays ’est pas inclus dans le fichier .hrc c’est parce qu’il ne faut pas indiquer le super-total de la hiérarchie à Tau-Argus.\n\n\n6.2.2 Seconde option\nQuand la hiérarchie est très étendue, l’écriture manuelle du fichier de hiérarchie est pénible. Or, quand ce genre de cas se présente, il existe souvent une table de correspondance permettant d’associer les différents niveaux entre eux.\nNous appelons table de correspondance une table qui précise l’ensemble des niveaux associés aux emboîtements les plus fins.\nLa table de correspondance représentant la hiérarchie suivante :\n\nNord\n@N1\n@N2\n@N3 \nOuest \n@O1 \n@O2 \n@O3 \n@O4 \nEst\n@E1 \n@E2 \n@E3 \nSud \n@S1 \n@S2\n\nest la suivante:\n\npays_corr_table &lt;- tibble(\n  niv0 = \"Pays\",\n  niv1 = c(rep(\"Nord\",3),rep(\"Ouest\",4),rep(\"Est\",3), rep(\"Sud\",2)),\n  niv2 = c(paste0(\"N\",1:3),paste0(\"O\",1:4),paste0(\"E\",1:3), paste0(\"S\",1:2))\n)\npays_corr_table\n\nAvec la fonction write_hrc2() du package rtauargus, on peut exporter la table de correspondance en un fichier hrc.\n\nwrite_hrc2(pays_corr_table %&gt;% select(-niv0), file_name = \"hrc/pays_TA_2.hrc\")\n\nRemarque: La fonction rtauargus::write_hrc2() qui permet de construire le fichier .hrc à partir d’une table de correspondance n’accepte pas de valeurs manquantes dans la table en entrée. Lorsque c’est le cas on répète la modalité sur les niveaux inférieurs.\nExemple : avec cette hiérarchie on répète la modalité C\n\nALL\n@A\n@@A1\n@@A2\n@B\n@@B1\n@@B2\n@@@B21\n@@@B22\n@C\n\n\ncorr_tab &lt;- tibble(\n  niv0 = \"ALL\",\n  niv1 = c(rep(\"A\",2),rep(\"B\",3), \"C\"),\n  niv2 = c(\"A1\",\"A2\",\"B1\",rep(\"B2\",2), \"C\"),\n  niv3 = c(\"A1\",\"A2\",\"B1\", \"B21\", \"B22\", \"C\")\n)\ncorr_tab"
  },
  {
    "objectID": "06_fiches_pratiques.html#comment-poser-le-secret-sur-plusieurs-tableaux-liés-par-les-marges",
    "href": "06_fiches_pratiques.html#comment-poser-le-secret-sur-plusieurs-tableaux-liés-par-les-marges",
    "title": "6  Fiches pratiques",
    "section": "6.3 Comment poser le secret sur plusieurs tableaux liés (par les marges) ?",
    "text": "6.3 Comment poser le secret sur plusieurs tableaux liés (par les marges) ?\nObjectif : savoir protéger un ensemble de tableaux liés en utilisant la fonction tab_multi_manager() du package rtauargus.\nPoser un masque de secret sur un ensemble de tableaux liés comprend les étapes suivantes :\n\nUne étape préparatoire consiste à bien analyser les caractéristiques des tableaux et détecter notamment la présence éventuelle de variables hiérarchiques. A partir de cette analyse il est nécessaire de construire deux listes :\n\n\nUne liste de tableaux\nUne liste renseignant les noms des variables de croisement de chacun des tableaux\n\n\nPoser le secret primaire sur chacun des tableaux indépendamment.\nCalculer le nombre de cellules détectées comme à risque dans chacun des tableaux (i.e. le nombres de variables touchées par le secret primaire).\nPoser le secret secondaire en utilisant la fonction tab_multi_manager()\nFaire une synthèse de la pose du secret dans chaque tableau en calculant le nombre de cellules selon leur statut final. En utilisant la norme européenne on note :\n\nA les cellules en secret primaire à cause de la règle de fréquence\nB les cellules en secret primaire à cause de la règle de dominance\nD les cellules concernées par le secret secondaire\nV les cellules non touchées par le secret, c’est-à-dire les cellules qui pourront être diffusées\n\n\nPar exemple si l’on souhaite diffuser le nombre d’entreprises en France selon :\n\nT0_1: le sexe de son/sa dirigeant(e) et la région d’implantation\nT0_2: le sexe de son/sa dirigeant(e) et la caractère polluant ou non de l’activité d’entreprise\nT0_3: le caractère polluant ou non de l’activité de l’entreprise et la région d’implantation\n\nNombre d’entreprises par région et par sexe du dirigeant (T0_1)\n\n\n\n\nFemme\nHomme\nTotal\n\n\n\n\nNord\n16\n20\n36\n\n\nSud\n19\n12\n31\n\n\nTotal\n35\n32\n67\n\n\n\nNombre d’entreprises polluantes par sexe du dirigeant (T0_2)\n\n\n\n\nPolluante\nNon polluante\nTotal\n\n\n\n\nFemme\n8\n27\n35\n\n\nHomme\n22\n17\n32\n\n\nTotal\n30\n37\n67\n\n\n\nNombre d’entreprises polluantes par région (T0_3)\n\n\n\n\nPolluante\nNon polluante\nTotal\n\n\n\n\nNord\n10\n26\n36\n\n\nSud\n20\n11\n31\n\n\nTotal\n30\n37\n67\n\n\n\nCes trois tableaux sont liés puisqu’ils partagent des marges communes :\n\nT0_1 et T0_2 ont les mêmes marges sur la variable SEXE\nT0_1 et T0_3 ont les mêmes marges sur la variable REGION\nT0_2 et T0_3 ont les mêmes marges sur la variable POLL\n\nSuivons à présent les étapes présentées précédemment.\n\nAnalyse des caractéristiques des tableaux (étape préparatoire)\n\nVérifier les hiérarchies et les totaux Il est important de détecter la présence éventuelle de variables hiérarchiques dans un ou plusieurs tableaux. Dans ce cas-ci il n’y a pas de variables hiérarchiques. Il est aussi intéressant de repérer les codes servant au total et de s’assurer que ces codes sont cohérents pour une même variable apparaissant dans plusieurs tableaux. En effet, deux tableaux partageant la même variable doivent utiliser la même modalité pour renseigner la total. On le vérifie en regardant les données.\nConstruire une liste de tableaux et une liste de variables de croisements. Pour ce faire on peut créer les listes “manuellement” :\n\n\n\nliste_tabs_exemple &lt;- list(\n  sex_reg = T0_1,\n  sex_pol = T0_2, \n  pol_reg = T0_3\n)\n\nliste_vars_exemple &lt;- list(\n  sex_reg = c(\"SEXE\",\"REGION\"),\n  sex_pol = c(\"SEXE\",\"POLL\"),\n  pol_reg = c(\"POLL\",\"REGION\")\n)\n\nOu bien cette étape peut être automatisée en fonction du contexte :\n\nliste_vars_exemple &lt;- purrr::map(\n  liste_tabs_exemple,\n  function(tab) names(tab)[1:2]\n)\n\n\nPoser le secret primaire sur chacun des tableaux\nPoser le secret secondaire avec tab_multi_manager()\n\nLa fonction tab_multi_manager() requiert les arguments suivants :\n\nlist_tables : liste de tables à protéger\nlist_explanatory_vars : liste des noms des variables de croisements présentes dans la liste des tables à protéger dans la table;\ndir_name : le nom du répertoire qui contiendra tous les fichiers créés, s’il n’existe pas, il sera créé (ex : dir_name = \"my_directory\").\nhrc : un vecteur nommé spécifiant le chemin vers le fichier .hrc pour chaque variable hiérarchique (ex : c(ACTIVITY = “chemin_vers_fichier/act.hrc”, NUTS = “chemin_vers_fichier/nuts.hrc” )).\nalt_hrc : une liste nommée utile pour traiter les hiérarchies non emboîtées. Les noms de la liste sont les noms des tableaux pour lesquelles une autre hiérarchie (non emboîtée en général) doit être utilisée (ex : si T1 et T2 ont une variable explicative, appelée ACTIVITY, et la même variable de réponse, mais la variable ACTIVITY n’a pas la même hiérarchie dans les les deux tables). Supposons que les hiérarchies (act1.hrc et act2.hrc) ne sont pas emboîtées. Dans ce cas, nous écrivons les deux arguments comme suit :\n\nhrc = c(ACTIVITY = \"path_to_file/act_1.hrc\") : par défaut, cette hiérarchie sera utilisée pour la variable ACTIVITY.\nalt_hrc = list(T2 = c(ACTIVITY = \"chemin_vers_fichier/act_2.hrc\")) dans la table T2, la hiérarchie alternative sera utilisée.\n\ntotcode : le code du total pour chaque variable explicative. Il est recommandé d’utiliser le même code de total pour chaque variable. Si par exemple le code est “Total” pour toutes les variables. La syntaxe suivante est autorisée : totcode = “Total”. Sinon, l’input attendu est une liste spécifiant le code total pour chaque variable explicative (ex : totcode = list(ACTIVITY = “Total”, NUTS = “FR”, SIZE = “Ensemble”, CJ = “Total”))\n\nAttention : Si les totaux ne sont pas dans la table, ils seront calculés par Tau-Argus, mais ils ne seront pas éligibles pour la suppression primaire. Il est donc nécessaire de les fournir dans la table de départ.\n\nalt_totcode : une liste nommée pour les codes de totaux alternatifs (voir alt_hrc pour l’utilisation).\nvalue : le nom de colonne de la variable de réponse dans les tableaux, il DOIT être identique pour chaque table (ex : valeur = “turnover”). Valeur par défaut : “value”.\nfreq : le nom de colonne de la variable de fréquence dans les tableaux, il DOIT être le même nom pour chaque tableau (ex : freq = “frequency”). Valeur par défaut : “freq”.\nsecret_var : le nom de la variable booléenne spécifiant le secret primaire dans les tables, il DOIT être le même nom pour chaque table (ex : secret_var = “is_secret_prim”). Valeur par défaut : “is_secret_prim”.\ncost_var : variable numeric qui permet de changer le coût de suppression d’une cellule, pris en compte dans les algorithmes de secret secondaire. Par défaut le coût correspond à la valeur de la cellule. Peut être spécifié pour chacune des cellules. Peut contenir des NA pour les coûts que l’on ne souhaite pas modifier.\nsuppress : algorithme de gestion du secret secondaire (syntaxe batch de Tau-Argus), ainsi que les potentiels paramètres associés. Valeur par défaut : MOD(1,5,1,0,0)\nip_start : les intervalles de protection pour la première itération sur une table donnée (nombre entier). La valeur par défaut est 10.\nip_end : les intervalles de protection pour la deuxième itération sur une table (nombre entier). Valeur par défaut : 0.\nnum_iter_max : nombre d’itérations maximum sur un tableau, ce paramètre est ici pour assurer le fait que la fonction va s’arrêter. En pratique on n’atteint jamais la limite de 10. La valeur par défaut est 10.\n\n\nAnalyser les résultats\n\nAnalyser le journal\nLa fonction tab_multi_manager() fournit un journal décrivant l’ensemble des itérations réalisées lors du processus de protection. Il s’agit du fichier journal.txt dans le répertoire mentionné dans dir_name.\nPour chaque étape, sont indiqués :\n\nLe tableau sur lequel est posé sur le secret secondaire ;\nLe bilan du secret posé sur ce tableau ;\nLe nombre de cellules communes (c’est-à-dire appartenant à plusieurs tableaux) touchées.\n\nL’ensemble des cellules communes est listé en fin de processus.\nBilan du secret\nL’objet retourné par la fonction tab_multi_manager() est une liste contenant les mêmes tables que la liste placée en input auxquelles sont ajoutés les résultats des différentes étapes de la pose du secret secondaire. Ainsi, la dernière variable de chaque tableau permet de déterminer le statut final de chaque cellule.\nCe code crée une variable statut_final renvoyant les codes de la norme européenne :\n\nexemple_masq &lt;- exemple_masq %&gt;% \n  purrr::map(\n    function(tab){\n      tab %&gt;% \n        rename_with(~\"is_secret_final\", last_col()) %&gt;% \n        mutate(\n          statut_final = case_when(\n            is_secret_freq ~ \"A\",\n            is_secret_final ~\"D\",\n            TRUE ~ \"V\"\n          )\n        )\n    }\n  )\n\nOn peut ainsi dresser notre bilan par tableau :\n\nexemple_masq %&gt;% \n  purrr::imap_dfr(\n    function(tab, nom){\n      tab %&gt;% \n        count(statut_final) %&gt;% \n        mutate(\n          part = n/sum(n)*100,\n          table = nom\n        ) %&gt;% \n        relocate(table)\n    }\n  )"
  },
  {
    "objectID": "06_fiches_pratiques.html#comment-poser-le-secret-en-présence-de-hiérarchies-non-emboîtées",
    "href": "06_fiches_pratiques.html#comment-poser-le-secret-en-présence-de-hiérarchies-non-emboîtées",
    "title": "6  Fiches pratiques",
    "section": "6.4 Comment poser le secret en présence de hiérarchies non-emboîtées ?",
    "text": "6.4 Comment poser le secret en présence de hiérarchies non-emboîtées ?\nLorsque l’on a la présence de hiérarchie non-emboîtée dans les tableaux traités alors il faut construire deux tableaux et deux hiérarchies pour chaque hiérarchie non-emboîtée.\nPar exemple, si on a un tableau T croisant NAF et GEO (deux variables hiérarchiques). Dans le cas où pour la NAF, en plus des activités classiques, il est décidé de publier un agrégat supplémentaire AGREG = B12 + C15 + G45. Ainsi, AGREG ne peut pas s’insérer dans la NAF. Il faut donc sortir cet agrégat pour construire un second tableau.\n\nT1, T2 croisent NAF et GEO\nT1 avec NAF classique (dont B12, C15, G45)\nT2 avec AGREG et ses composants B12, C15, G45\n\nRappel des arguments de tab_multi_manager() utiles pour traiter les hiérarchies non-emboîtées :\n\nalt_totcode : une liste nommée pour les codes de totaux alternatifs (voir alt_hrc pour l’utilisation).\nalt_hrc : une liste nommée utile pour traiter les hiérarchies non emboîtées. Les noms de la liste sont les noms des tableaux pour lesquelles une autre hiérarchie (non emboîtée en général) doit être utilisée (ex : si T1 et T2 ont une variable explicative, appelée ACTIVITY, et la même variable de réponse, mais la variable ACTIVITY n’a pas la même hiérarchie dans les les deux tables). Supposons que les hiérarchies (act1.hrc et act2.hrc) ne sont pas emboîtées. Dans ce cas, nous écrivons les deux arguments comme suit :\n\nhrc = c(ACTIVITY = \"path_to_file/act_1.hrc\") : par défaut, cette hiérarchie sera utilisée pour la variable ACTIVITY.\nalt_hrc = list(T2 = c(ACTIVITY = \"chemin_vers_fichier/act_2.hrc\")) dans la table T2, la hiérarchie alternative sera utilisée."
  },
  {
    "objectID": "06_fiches_pratiques.html#comment-utiliser-les-coûts",
    "href": "06_fiches_pratiques.html#comment-utiliser-les-coûts",
    "title": "6  Fiches pratiques",
    "section": "6.5 Comment utiliser les coûts ?",
    "text": "6.5 Comment utiliser les coûts ?\nObjectif : apprendre à utiliser l’option cost du package rtauargus afin de rediriger le secret secondaire.\nTau-Argus utilise des algorithmes d’optimisation afin de minimiser la perte d’information qui résulte du secret secondaire. La question qui se pose est quelle valeur doit-être minimiser ? Plusieurs choix sont possibles, la valeur des cellules, le nombre de cellules, les effectifs des cellules. Il est également possible de personnaliser les coûts si l’on souhaite prioriser la pose de secret secondaire sur certains agrégats.\n\n6.5.1 Minimiser la valeur secrétisée\nTau-Argus minimise par défaut la valeur des cellules supprimées. C’est ce qui est le plus cohérent, lorsque l’on publie un tableau c’est bien la valeur des cellules qui nous intéresse.\n\n\n6.5.2 Minimiser le nombre de cellules secrétisées\nPour minimiser le nombre de cellules secrétisées il faut utiliser le paramètre cost et donc le définir dans notre table. si l’on souhaite minimiser le nombre de cellules masquées, il faut alors que le coût de suppression de chaque cellule soit identique, Tau-Argus considère alors qu’elles ont toutes la même importance. Pour cela il faut créer une colonne “cost” qui vaut 1 pour toutes les cellules de notre tableau.\n\n\n6.5.3 Minimiser les effectifs secrétisés\nOn peut aussi considérer que la valeur importante des cellules sont leurs effectifs. On peut penser qu’un nombre de répondants élevé pour une cellule lui confère une plus grande fiabilité statistique. Pour cela il suffit simplement de recopier la colonne “freq” dans notre colonne “cost”.\n\n\n6.5.4 Orienter le secret secondaire\nDans certaines données on peut trouver des agrégats jugés non significatifs. Ces derniers ne seront pas publiés dans les tableaux mais notés “ns”. On peut alors s’en servir pour la pose du secret secondaire.\nAttention, on pourrait penser que ces cellules devraient être placées en secret primaire, afin qu’elles soient considérées comme masquées quoi qu’il arrive. Cependant, cela peut entraîner plus de secret secondaire que nécessaire sachant qu’il n’est pas nécessaire de protéger ces cellules du risque de recoupement. L’utilisateur peut retrouver la valeur de ces cellules, mais il est averti qu’elles n’ont aucune importance statistique.\nPour prioriser le secret secondaire on crée donc pour les agrégats non-significatifs la colonne “cost” qui vaut 1. C’est le coût minimal, ceci indiquera à Tau-Argus que ces agrégats sont donc prioritaires pour le secret secondaire. Ainsi, certains coûts ne seront pas définis. Ce n’est pas un problème, lorsque l’on ne spécifie pas de coût pour une cellule, Tau-Argus va considérer que son coût de suppression est égal à la valeur de cette dernière."
  },
  {
    "objectID": "06_fiches_pratiques.html#différenciation-avec-diff-man",
    "href": "06_fiches_pratiques.html#différenciation-avec-diff-man",
    "title": "6  Fiches pratiques",
    "section": "6.6 Différenciation avec diff man",
    "text": "6.6 Différenciation avec diff man\nNiveau expert pour traiter non emboîtement epci x communes, mais on pourrait envisager hiérarchies non emboîtées si intégration de la gestion de la différenciation directement dans rtauargus"
  },
  {
    "objectID": "03_notions.html#tableaux-deffectifs-et-tableaux-de-magnitude",
    "href": "03_notions.html#tableaux-deffectifs-et-tableaux-de-magnitude",
    "title": "3  Notions principales à connaître",
    "section": "3.2 Tableaux d’effectifs et tableaux de magnitude",
    "text": "3.2 Tableaux d’effectifs et tableaux de magnitude\nOn distingue deux types de tableaux : les tableaux d’effectifs et ceux de magnitude.\nUn tableau d’effectifs est un tableau dans lequel la valeur d’une cellule correspond au nombre d’unités qui partagent les caractéristiques de la cellule.\nVoici un exemple de tableau d’effectifs :\n\n\n\nNombre d’entreprises polluantes par région\n\n\nUn tableau de magnitude (ou de volume) est un tableau dans lequel la valeur de chaque cellule représente la somme des contributions des répondants qui partagent les caractéristiques de cette cellule.\nVoici un exemple de tableau de magnitude :\n\n\n\nVentes réalisées, en millions d’euros (nombre de contributeurs)"
  },
  {
    "objectID": "03_notions.html#secret-primaire-et-secret-secondaire",
    "href": "03_notions.html#secret-primaire-et-secret-secondaire",
    "title": "3  Notions principales à connaître",
    "section": "3.3 Secret primaire et secret secondaire",
    "text": "3.3 Secret primaire et secret secondaire\nLe secret primaire renvoie aux cellules qui doivent être secretisées dès le départ du processus de secrétisation car elles sont considérées comme sensibles. Selon le type de données les cellules considérées comme sensibles varient. Par exemple, pour les statistiques d’entreprises les cellules sont catégorisées comme sensibles du fait de la règle de fréquence (moins de 3 unités dans une cellule) ou de la règle de dominance (un répondant représente plus de 85% du total de la cellule). On ne peut pas diffuser les cellules qui constituent le secret primaire.\nUne solution pour ne pas diffuser ces cellules est de les supprimer (cacher). Cependant, uniquement supprimer les cellules touchées par le secret primaire n’est généralement pas suffisant. En effet, si les marges du tableau sont diffusées, alors les cellules sont liées entre elles par des équations. Ainsi, il faut cacher d’autres cellules pour ne pas pouvoir déduire la valeur des cellules cachées : c’est le secret secondaire."
  },
  {
    "objectID": "03_notions.html#variable-hiérarchique",
    "href": "03_notions.html#variable-hiérarchique",
    "title": "3  Notions principales à connaître",
    "section": "3.4 Variable hiérarchique",
    "text": "3.4 Variable hiérarchique\nUne variable hiérarchique est une variable de ventilation comprenant plusieurs sous-totaux. Autrement dit, certaines modalités de cette variables se somment en une autre modalité de la variable.\nPar exemple, on pourrait imaginer une variable hiérarchique géographique comme dans le tableau suivant :\n\n\n\nNombre d’entreprises qui produisent des violons, par région\n\n\nOn peut aussi la représenter sous forme d’arbre :\n\n\n\n\nflowchart LR\n  A[Pays] --&gt; B[Nord]\n  A[Pays] --&gt; C[Ouest]\n  A[Pays] --&gt; D[Est]\n  A[Pays] --&gt; E[Sud]\n  B --&gt; F[N1]\n  B --&gt; G[N2]\n  B --&gt; H[N3]\n  C --&gt; I[O1]\n  C --&gt; J[O2]\n  C --&gt; K[O3]\n  C --&gt; L[04]\n  D --&gt; M[E1]\n  D --&gt; N[E2]\n  D --&gt; O[E3]\n  E --&gt; P[S1]\n  E --&gt; Q[S2]"
  },
  {
    "objectID": "03_notions.html#hiérarchies-non-emboîtées",
    "href": "03_notions.html#hiérarchies-non-emboîtées",
    "title": "3  Notions principales à connaître",
    "section": "3.5 Hiérarchies non-emboîtées",
    "text": "3.5 Hiérarchies non-emboîtées\nUne hiérarchie non-emboîtée est le cas où dans un tableau diffusé, l’emboîtement des modalités d’une variable hiérarchique n’est pas parfait.\nPar exemple si on utilise une variable de la NAF A88 comme suit et que l’on veut aussi diffuser un sous-total regroupant les codes division 03, 05 et 06 alors on a une hiérarchie non-emboîtée.\n\n\n\nExemple hiérarchie non-emboîtée à partir de la NAF A88"
  },
  {
    "objectID": "03_notions.html#liaisons-entre-tableaux",
    "href": "03_notions.html#liaisons-entre-tableaux",
    "title": "3  Notions principales à connaître",
    "section": "3.6 Liaisons entre tableaux",
    "text": "3.6 Liaisons entre tableaux\nOn dit que des tableaux sont liés lorsqu’ils possèdent la même variable ventilée et partagent une ou plusieurs variables de ventilation (définir ventilé et ventilation, se mettre au clair sur le vocabulaire, cible ? de croisement?). Ces liens entre tableaux doivent être pris en compte pour traiter correctement le secret. Sinon, les cellules cachées peuvent se déduire les unes des autres.\nLes liens les plus courants sont :\n\nLes tableaux partageant des marges communes (i.e. partageant le même champ, la même variable de réponse, une ou plusieurs variables de croisement);\nLes tableaux additifs ou corrélés (i.e. partageant le même champ, les mêmes variables de croisements, les variables de réponse différentes mais liées entre elles - équation ou corrélation);\nLes hiérarchies non-emboîtées ;\nLes différences de millésime.\n\nEn effet, pour des données périodiques, la temporalité peut être perçue comme un ensemble de tableaux liés : il vaut mieux que le masque de secret change peu entre chaque millésime."
  },
  {
    "objectID": "03_notions.html#tableau-à-diffuser-vs-à-protéger",
    "href": "03_notions.html#tableau-à-diffuser-vs-à-protéger",
    "title": "3  Notions principales à connaître",
    "section": "3.7 Tableau à diffuser vs à protéger",
    "text": "3.7 Tableau à diffuser vs à protéger\nLes tableaux qui seront finalement diffusés ne sont pas les mêmes que les tableaux à protéger. En effet, les tableaux à protéger sont le résultat de l’analyse de la demande. Cette analyse consiste à identifier les tableaux liés entre eux et les hiérarchies (emboîtées ou non). Dès lors, l’identification de ces liens va nous pousser à regrouper différents tableaux ou au contraire les séparer. Une fois l’analyse terminée on se retrouve avec les tableaux à protéger, le secret sera appliqué sur ces tableaux et c’est seulement une fois la procédure terminée que l’on pourra reporter le secret identifié sur les tableaux à protéger sur les tableaux à diffuser."
  },
  {
    "objectID": "05_les_outils.html#tau-argus",
    "href": "05_les_outils.html#tau-argus",
    "title": "5  Présentation des outils",
    "section": "5.1 Tau-argus",
    "text": "5.1 Tau-argus\n\n5.1.1 Présentation générale\nTau-Argus est la logiciel de référence en Europe en termes de pose de secret. Il permet de calculer le secret primaire et secondaire ou de faire des arrondis contrôlés. Le développement, la maintenance et le support de Tau-Argus sont réalisés par un groupe d’experts européens et est coordonné par CBS (l’institut national de statistiques des Pays-Bas). C’est un logiciel libre et open source (https://github.com/sdcTools/tauargus) utilisable via une interface graphique.\n\n\n5.1.2 Les différents algorithmes du secret secondaire\nPlusieurs algorithmes sont implémentes dans Tau-Argus pour gérer le secret secondaire. La méthode Hypercube permet un traitement séquentiel des cases sous secret primaire, en minimisant le coût. Dans le cas d’une hiérarchie, elle traite les sous-tableaux indépendamment. Il s’agit d’une méthode heuristique et rapide. Elle a l’avantage de proposer un masque rapidement mais celui-ci n’est pas le plus optimal. La méthode Optimal met en place une minimisation globale du coût et respecte les intervalles de protection. C’est une méthode souvent très lente. Enfin, la méthode Modular éclate le problème en différents sous-tableaux sur lesquels elle applique la méthode Optimal. Les variables doivent être hiérarchiques (pourquoi ?). C’est une méthode assez rapide que l’on utilise dans la plupart des cas.\n\n\n5.1.3 Avantages et inconvénients\nTau-Argus comporte de nombreux avantages, il s’agit d’un outil qui fait référence, performant sur la partie pose de secret et il est maintenu régulièrement. Cependant, il a des limites. En effet, l’interface est assez fouillis, il renvoie des bugs et des erreurs pas toujours facile à comprendre et corriger, enfin la reproductibilité des opérations est limitée."
  },
  {
    "objectID": "05_les_outils.html#package-rtauargus",
    "href": "05_les_outils.html#package-rtauargus",
    "title": "5  Présentation des outils",
    "section": "5.2 Package rtauargus",
    "text": "5.2 Package rtauargus\nBien que l’usage standard de Tau-Argus se fasse par une interface graphique, la prise en main n’est pas aisée. Ainsi, un package R a été développé à l’Insee pour travailler avec Tau-Argus depuis R : rtauargus. Il permet de bénéficier des avantages de Tau-Argus tout en limitant les inconvénients.\n\n5.2.1 Objectifs\nLe but de ce package est de faciliter la prise en main de Tau-Argus. Ainsi, il permet de poser le secret secondaire avec Tau-Argus sans l’ouvrir et gérer de grosses demandes.\n\n\n5.2.2 Principales fonctionnalités\nLe package a deux fonctionnalités principales : il permet de poser le secret directement sur les tableaux ou à partir des microdonnées. Le fonctionnement général du package est le suivant : création de l’ensemble des fichiers dans les formats attendus par Tau-Argus, lancement de Tau-Argus puis récupération des résultats dans R.\nLa démarche utilisée à la DMRG consiste à poser le secret primaire “manuellement”, c’est-à-dire sans faire appel à Tau-Argus et d’ensuite poser le secret secondaire à l’aide de la fonction tab_rtauargus() pour protéger un seul tableau et tab_multi_manager() pour protéger plusieurs tableaux.\n\n\n5.2.3 Où trouver la documentation ?\nLe documentation est disponible en ligne : https://inseefrlab.github.io/rtauargus/"
  },
  {
    "objectID": "05_les_outils.html#comment-débugger",
    "href": "05_les_outils.html#comment-débugger",
    "title": "5  Présentation des outils",
    "section": "5.3 Comment débugger ?",
    "text": "5.3 Comment débugger ?\n\n5.3.1 Les principales erreurs\n\n5.3.1.1 Les limites de Tau-Argus\nLe nombre de variables de ventilation\nLa taille des nombres\nLes limites du fichier hiérarchique\nLe nombre de modalités\nLes algorithmes de secret secondaire\n\n\n5.3.1.2 Les codes d’erreur dans Tau-Argus\nCette partie n’est pas exhaustive mais recense les codes d’erreurs que nous avons rencontré en utilisant Tau-Argus.\nLes différentes causes possibles du message “code not in codelist” sont les suivantes :\n\nUne modalité d’une variable hiérarchique est présente dans la table mais pas dans le fichier hiérarchique associé\nLes noms de colonnes spécifiés pour le paramètre specify_tables de la fonction tab_arb() ne sont pas dans le même ordre que dans le tableau\n\nLe message d’erreur “illegal status in transition” est lié à l’apriori. Voici les différentes causes possibles :\n\nUne cellule possède deux status contradictoires dans le fichier d’apriori (ex : A01,s et A01,u). La cellule ne pouvant pas avoir deux status à la fois, Tau-Argus ne peut pas comprendre le statut de la cellule\nUne cellule avec une valeur nulle et un effectif nul est renseignée comme unsafe (u)\n\nLes différentes causes possibles du message d’erreur “error making totals” sont :\n\nOn a écrit dans le batch  et donc les totaux dans le tableau ne sont pas égaux à la somme des éléments qui le composent, autrement dit la table n’est pas additive\nOn écrit dans le batch  1 et donc Tau-Argus reconstitue lui-même les totaux. Cela vient généralement du problème des feuilles uniques décrit dans la partie précédente.\n\nLe message d’erreur “HiTaS: couldn’t load JJ-routines” est spécifique à l’aglorithme Modular, en voici les différentes causes possibles :\n\nLa taille maximale pour un nombre à été dépassée (faire référence)\nLe problème paraît insoluble pour Modular (faire référence)\nN.B : parfois “couldn’t load JJ-routines” (sans HiTaS devant) renvoie à un problème du type “code not in codelist”\n\nLe message d’erreur “no optimal solution found JJ not loaded” est spécifique à l’aglorithme Optimal, en voici les différentes causes possibles :\n\nLa taille maximale pour un nombre à été dépassée (faire référence)\nLe problème paraît insoluble pour Optimal (faire référence)\n\nLe message d’erreur “the hypercube could not be applied See file PROTO002” est spécifique à l’aglorithme HyperCube, en voici les différentes causes possibles :\n\nLa taille maximale pour un nombre à été dépassée (faire référence)\nLe problème paraît insoluble pour HyperCube (faire référence)\n\nPour le message ” error in modular suppression procedure” il faut bien faire attention que c’est le message d’erreur présent dans le batch :\n\nGénéralement quand c’est l’unique message d’erreur, alors c’est que Modular a tourné pendant quelques minutes puis a atteint une limite de mémoire dans Tau-Argus\nfaire référence et tester avec un autre algorithme\n\n\n\n\n5.3.2 Savoir lire les différents types de fichiers spécifiques à Tau-Argus\nFichiers en sortie de rtauargus :\n\n.rda : fichier de métadonnées pour Tau-Argus\n.tab : fichier donné à Tau-Argus, il est décrit par .rda, les colonnes sont dans l’ordre des nom dans .rda\n.hst : fichier de l’apriori, avec rtauargus on pose le secret primaire en amont, on ne demande pas à Tau-Argus de le faire. Dans ce fichier on a à la fois le secret de départ, le “protection level” et les coûts (c)\n.arb : fichier executé dans la console windows, il est interprété par Tau-Argus. Autrement dit, ce sont une liste de commandes données à Tau-Argus\n\nFichiers en sortie de Tau-Argus :\n\n.txt : journal d’exécution, il n’écrase pas les exécutions ainsi on peut voir toutes les exécutions jamais faites avec Tau-Argus\n.csv : données d’entrée avec deux nouvelles colonnes. La colonne status à trois modalités : “B” = secret apriori (u), “D” = secret secondaire, “V” = cellules valides, diffusables. La colonne dom renvoie à la dominance dans les cas de secret de dominance où le pourcentage de dominance est nécessaire, néanmoins étant donné notre utilisation de Tau-Argus (pose du secret primaire “manuellement”) cette colonne ne nous intéresse pas."
  },
  {
    "objectID": "03_notions.html#comment-décrire-un-tableau",
    "href": "03_notions.html#comment-décrire-un-tableau",
    "title": "3  Notions principales à connaître",
    "section": "3.1 Comment décrire un tableau ?",
    "text": "3.1 Comment décrire un tableau ?\nUn tableau présente le résultat de l’agrégation d’un indicateur connu au niveau individuel, ventilé selon une ou plusieurs catégories de ces individus.\nOn appellera :\n\nindicateur ou variable réponse, la variable numérique agrégée. En général on précise également l’opération d’agrégation utilisée. Par exemple, le nombre d’entreprises (somme de pondérations dans le cas d’une enquête, sinon simple comptage), le chiffre d’affaire (sous-entendu le total ou la somme des chiffres d’affaire), la moyenne d’âge, la part de personnes vivant sous le seuil de pauvreté, etc.\nvariable(s) de croisement ou variable(s) explicatives, la ou les variables de ventilation de l’indicateur. Ce sont des variables dites catégorielles (ex : diplôme, le secteur d’activité) et sont parfois des variables numériques découpées en tranches (ex : classes d’âge, tranches d’effectifs).\nchamp, la population ou sous-population sur laquelle l’agrégation est réalisée. Par exemple, un tableau restreint à la population des 15-25 ans ou aux entreprises du secteur de l’industrie.\n\n\n\n\nLe nombre d’entreprises selon leur région d’implantation et le caractère polluant de leurs activités, parmi les entreprises du secteur industriel\n\n\nExemples de tableaux :\n\nOn veut diffuser la moyenne d’âge des chefs d’entreprises par secteur d’activité :\n\nvariable de croisement : secteur d’activité (ACT)\nindicateur : âge moyen (x_age)\nchamp : toutes entreprises confondues\n\nOn souhaite diffuser la note moyenne au brevet des élèves entrant en seconde selon la région, le secteur de l’établissement (public, privé), et la catégorie socio-professionnelle des parents :\n\nvariable de croisement : région (REG), secteur (SEC)\nindicateur : note moyenne (x_note)\nchamp : élèves de seconde de l’année N\n\n\nIl existe 3 formats de tableaux :\n\nLes tableaux croisés, particulièrement adaptés à la diffusion d’une information ventilée selon deux variables catégorielles (ex : (ex_tab_croise?), !!!! ne fonctionne pas encore mais à terme mettre en place les cross références).\nLes tableaux longs, particulièrement adaptés aux traitements des données, et résultats naturels des agrégations réalisées en R avec dplyr (group_by + summarise) aussi bien qu’avec data.table (melt).\nLes tableaux larges, autre format parfois utile lors des traitements, sont tels que chaque croisement de modalités des variables catégorielles est une variable du tableau.\n\n\n\n\nTableau long formé à partir du tableau croisé précédent\n\n\n\n\n\nTableau large formé à partir du tableau croisé précédent\n\n\nEn général, un utilisateur final pense à un tableau croisé. Mais pour la pose du secret, on travaillera exclusivement avec la forme longue des tableaux. Un tableau long est donc composé de deux types de variables :\n\nLes variables de croisements (catégorielles) qui servent à décrire le contexte d’une cellule ;\nLa variable réponse (ou indicateur) qui indique la valeur d’une cellule."
  }
]