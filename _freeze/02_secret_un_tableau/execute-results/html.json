{
  "hash": "06811876453754cec76dbdb6635c20bb",
  "result": {
    "engine": "knitr",
    "markdown": "# Poser le secret sur un tableau\n\n::: callout-tip\n## Etapes de la pose du secret sur un seul tableau\n\n1.  Poser le secret primaire\n2.  Calculer le nombre de cellules détectées comme à risque\n3.  Poser le secret secondaire à l'aide de la fonction `tab_rtauargus()`\n4.  Faire une synthèse du secret posé\n:::\n\nCe chapitre a été réalisé avec la version 1.2.0 de\n`rtauargus` et la version 4.2.3 de `TauArgus`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rtauargus)\nlibrary(dplyr)\n```\n:::\n\n\n\nPoser un masque de secret sur un tableau comprend les étapes suivantes :\n\n1.  Poser le secret primaire en créant des variables indicatrices :\n\n-   Pour chacun des tableaux on ajoute une variable booléenne indiquant\n    si la cellule est problématique (`TRUE`) ou non (`FALSE`), au\n    regarde des règles pertinentes à appliquer comme : la règle de\n    fréquence `is_secret_freq` ou la règle de dominance `is_secret_dom`\n-   Ensuite, on crée une variable résumant le secret primaire\n    `is_secret_prim` :\n    -   `is_secret_prim = is_secret_freq` si seule la règle de fréquence\n        doit s'appliquer\n    -   `is_secret_prim = is_secret_freq | is_secret_dom` si les deux\n        règles doivent s'appliquer\n\nVoici un exemple de code pour les règles classiques en statistiques\nd'entreprises :\n\n\n::: {.cell}\n\n:::\n\n\nLe tableau `T0` présente le chiffre d'affaires des entreprises ventilé\npar leur activité et leur taille.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(T0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [414 × 5] (S3: tbl_df/tbl/data.frame)\n $ ACTIVITY: chr [1:414] \"AZ\" \"BE\" \"FZ\" \"GI\" ...\n $ SIZE    : chr [1:414] \"Total\" \"Total\" \"Total\" \"Total\" ...\n $ FREQ    : int [1:414] 405 12878 28043 62053 8135 8140 11961 41359 26686 25108 ...\n $ VALUE   : num [1:414] 44475 24827613 8907311 26962063 8584917 ...\n $ MAX     : num [1:414] 6212 1442029 1065833 3084242 3957364 ...\n```\n\n\n:::\n\n```{.r .cell-code}\n# Pose du secret \"manuelle\"\nT0_detect <- T0 %>% \n  mutate(\n      is_secret_freq = FREQ > 0 & FREQ < 3,\n      is_secret_dom = (VALUE != 0) & (MAX > 0.85*VALUE)\n    ) %>% \n  mutate(\n    is_secret_prim = is_secret_freq | is_secret_dom\n  )\n\n# Résultat\nstr(T0_detect)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [414 × 8] (S3: tbl_df/tbl/data.frame)\n $ ACTIVITY      : chr [1:414] \"AZ\" \"BE\" \"FZ\" \"GI\" ...\n $ SIZE          : chr [1:414] \"Total\" \"Total\" \"Total\" \"Total\" ...\n $ FREQ          : int [1:414] 405 12878 28043 62053 8135 8140 11961 41359 26686 25108 ...\n $ VALUE         : num [1:414] 44475 24827613 8907311 26962063 8584917 ...\n $ MAX           : num [1:414] 6212 1442029 1065833 3084242 3957364 ...\n $ is_secret_freq: logi [1:414] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ is_secret_dom : logi [1:414] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ is_secret_prim: logi [1:414] FALSE FALSE FALSE FALSE FALSE FALSE ...\n```\n\n\n:::\n:::\n\n\n2.  Calculer le nombre de cellules détectées comme à risque\n\n3.  Poser le secret secondaire en utilisant le package `rtauargus` en\n    utilisant la fonction `tab_rtauargus()`.\n\nLa fonction `tab_rtauargus()` requiert les arguments suivants :\n\n-   `tabular`: la table à protéger\n-   `dir_name`: le nom du répertoire où les fichiers seront sauvegardés\n-   `files_name`: le nom utilisé pour nommer les fichiers (chaque\n    fichier a une extension différente);\n-   `explanatory_vars`: le nom des variables de croisements présents\n    dans la table;\n-   `secret_var`: le nom de la variable indiquant si une cellule est à\n    risque ou non (secret primaire);\n-   `value` = nom de la variable de réponse;\n-   `freq` = nom de la variable d'effectifs;\n-   `totcode`: le code utilisé pour indiquer le total pour chacune des\n    variables de croisements (`explanatory_vars`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Localisation de tauargus sur AUS\nloc_tauargus <- \"Y:/Logiciels/TauArgus/TauArgus4.2.3/TauArgus.exe\"\noptions(rtauargus.tauargus_exe = loc_tauargus)\n\n# Préciser la localisation de tauargus\nloc_tauargus <- \"C:/Users/tmm7an/Documents/SDC/TauArgus/TauArgus4.2.3/TauArgus.exe\"\noptions(rtauargus.tauargus_exe = loc_tauargus)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nT0_masq <- tab_rtauargus(\n  T0_detect,\n  dir_name = \"tauargus_files/ex_T0\",\n  files_name = \"T0\",\n  explanatory_vars = c(\"ACTIVITY\",\"SIZE\"),\n  secret_var = \"is_secret_prim\",\n  value = \"VALUE\",\n  freq = \"FREQ\",\n  totcode = c(ACTIVITY=\"Total\",SIZE=\"Total\"),\n  verbose = FALSE\n)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n4.  Calculer le nombre de cellules selon leur statut final en suivant la\n    norme européenne :\n\n-   `A` les cellules en secret primaire à cause de la règle de fréquence\n-   `B` les cellules en secret primaire à cause de la règle de dominance\n    (dans le futur ces cellules pourraient être notées `O`)\n-   `D` les cellules concernées par le secret secondaire\n-   `V` les cellules non touchées par le secret, c'est-à-dire les\n    cellules qui pourront être diffusées.\n\nPour faire le bilan du secret, le mieux est de modifier la variable\n`Status` fournie par Tau-Argus. En effet, cette variable ne permet pas\nde faire la distinction entre les deux types de secret primaire\n(fréquence ou dominance), on modifie donc ces modalités pour faire\napparaître cette distinction.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nT0_masq <- T0_masq %>% \n  mutate(\n    statut_final = case_when(\n      is_secret_freq ~ \"A\",\n      is_secret_dom ~ \"B\",\n      TRUE ~ Status,\n    )\n  )\n```\n:::\n\n\nAfin de bien appréhender l'impact du secret posé, on va non seulement\ncompter le nombre de cellules masquées, mais aussi calculer la valeur\ndes cellules masquées.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nT0_masq %>% \n  group_by(statut_final) %>% \n  summarise(\n    n_cell = n(),\n    val_cell = sum(VALUE)\n  ) %>%\n  mutate(\n    pc_n_cell = n_cell/sum(n_cell)*100,\n    pc_val_cell = val_cell/sum(val_cell)*100\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  statut_final n_cell    val_cell pc_n_cell pc_val_cell\n  <chr>         <int>       <dbl>     <dbl>       <dbl>\n1 A                52   22115262.     12.6         1.51\n2 B                25   37823909.      6.04        2.59\n3 D                46   21032941.     11.1         1.44\n4 V               291 1381270369.     70.3        94.5 \n```\n\n\n:::\n:::\n\n\nUn bon indicateur de la qualité du secret secondaire posé consiste à\nrapporter le nombre de cellules supprimées lors de cette phase au nombre\nde cellules détectées comme à risque (secret primaire). Ici par exemple,\nnous avons un ratio de $46/(52+25) = 0.6$. Ainsi, pour protéger une case\nen secret primaire, Tau-argus a dû masquer 0.6 cellule(s) ; ce qui est\ntrès peu.\n\nEn effet, pour un tableau à deux dimensions, la présence d'un secret\nprimaire engendre la suppression d'au moins 3 cellules supplémentaires.\nDonc, le ratio obtenu sur cet exemple indique qu'un certain nombre de\ncellules en secret primaire se protègent entre elles.\n\n",
    "supporting": [
      "02_secret_un_tableau_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}