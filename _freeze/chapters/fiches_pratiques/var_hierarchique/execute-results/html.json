{
  "hash": "3f4b8a3a7bdb8b0d895e3febaadebbb8",
  "result": {
    "markdown": "::: {.cell}\n\n:::\n\n\n# Prendre en compte une variable hiérarchique {#sec-varhrc}\n\n:::{.solutionbox-facile}\n\n::::{.solutionbox-header-facile}\n:::::{.solutionbox-icon-facile}\n:::::\n  Niveau facile\n::::\n  \n:::\n  \n  Reprenons ici l'exemple de la variable `geo` qui est une variable\nhiérarchique puisqu'il existe des emboîtements entre les différents\nniveaux.\n\n\n```{mermaid}\nflowchart TD\nA[Pays] --> B[Nord]\nA --> C[Ouest]\nA --> D[Est]\nA --> E[Sud]\nB --> F[N1]\nB --> G[N2]\nB --> H[N3]\nC --> I[O1]\nC --> J[O2]\nC --> K[O3]\nC --> L[O4]\nD --> M[E1]\nD --> N[E2]\nD --> O[E3]\nE --> P[S1]\nE --> Q[S2]\n```\n\n\nPour prendre en compte cette hiérarchie il faut d'abord pouvoir la\nreprésenter de telle sorte que Tau-Argus comprenne les différents\nemboîtements présents.\n\n## Première option\n\nLa première option consiste à créer le fichier nécessaire (extension\n`.hrc`) à la main. Ceci est tout à fait pertinent si la hiérarchie n'est\npas trop étendue.\n\nTau-Argus attend en effet un type de fichier bien particulier, dont\nl'extension est `.hrc`. Il s'agit d'un simple fichier texte où les\ndifférents emboîtements sont écrits les uns en-dessous des autres. Un\nsymbole (le `@`) est utilisé pour préciser le niveau de chacun des\nemboîtements au sein de la hiérarchie.\n\nDans notre exemple on écrirait le fichier de la façon suivante :\n\n\n::: {.cell}\n\n```{.tex .cell-code}\nNord\n@N1\n@N2\n@N3 \nOuest \n@O1 \n@O2 \n@O3 \n@O4 \nEst\n@E1 \n@E2 \n@E3 \nSud \n@S1 \n@S2\n```\n:::\n\n\nOn remarque que le total `Pays` n'est pas inclus dans le fichier `.hrc`\nc'est parce qu'il ne faut **pas indiquer le super-total de la\nhiérarchie** à Tau-Argus.\n\n## Seconde option\n\nQuand la hiérarchie est très étendue, l'écriture manuelle du fichier de\nhiérarchie est pénible. Or, quand ce genre de cas se présente, il existe\nsouvent une table de correspondance permettant d'associer les différents\nniveaux entre eux.\n\nNous appelons table de correspondance une table qui précise l'ensemble\ndes niveaux associés aux emboîtements les plus fins.\n\nLa table de correspondance représentant la hiérarchie ci-dessus est la\nsuivante:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npays_corr_table <- tibble(\n  niv0 = \"Pays\",\n  niv1 = c(rep(\"Nord\",3),rep(\"Ouest\",4),rep(\"Est\",3), rep(\"Sud\",2)),\n  niv2 = c(paste0(\"N\",1:3),paste0(\"O\",1:4),paste0(\"E\",1:3), paste0(\"S\",1:2))\n)\npays_corr_table\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 3\n   niv0  niv1  niv2 \n   <chr> <chr> <chr>\n 1 Pays  Nord  N1   \n 2 Pays  Nord  N2   \n 3 Pays  Nord  N3   \n 4 Pays  Ouest O1   \n 5 Pays  Ouest O2   \n 6 Pays  Ouest O3   \n 7 Pays  Ouest O4   \n 8 Pays  Est   E1   \n 9 Pays  Est   E2   \n10 Pays  Est   E3   \n11 Pays  Sud   S1   \n12 Pays  Sud   S2   \n```\n:::\n:::\n\n\nAvec la fonction `write_hrc2()` du package `rtauargus`, on peut\ntransformer la table de correspondance en un fichier `hrc`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_hrc2(pays_corr_table %>% select(-niv0), file_name = \"hrc/pays_TA_2.hrc\")\n```\n:::\n\n\nRemarque: La fonction `rtauargus::write_hrc2()` n'accepte pas de valeurs\nmanquantes dans la table en entrée. Lorsqu'une hiérarchie n'a pas la\nmême nombre de sous-niveaux selon les branches on répète la modalité du\nniveau supérieur sur les niveaux inférieurs pour ne pas avoir de cases\nvides.\n\nExemple : pour la hiérarchie ci-dessous on répète la modalité `C` dans\nla table de correspondance.\n\n\n```{mermaid}\nflowchart TD\nA[Total] --> B[A]\nA --> C[B]\nA --> D[C]\nB --> E[A1]\nB --> F[A2]\nC --> G[B1]\nC --> H[B2]\nH --> I[B21]\nH --> J[B22]\n```\n\n::: {.cell}\n\n```{.r .cell-code}\ncorr_tab <- tibble(\n  niv0 = \"ALL\",\n  niv1 = c(rep(\"A\",2),rep(\"B\",3), \"C\"),\n  niv2 = c(\"A1\",\"A2\",\"B1\",rep(\"B2\",2), \"C\"),\n  niv3 = c(\"A1\",\"A2\",\"B1\", \"B21\", \"B22\", \"C\")\n)\ncorr_tab\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  niv0  niv1  niv2  niv3 \n  <chr> <chr> <chr> <chr>\n1 ALL   A     A1    A1   \n2 ALL   A     A2    A2   \n3 ALL   B     B1    B1   \n4 ALL   B     B2    B21  \n5 ALL   B     B2    B22  \n6 ALL   C     C     C    \n```\n:::\n:::",
    "supporting": [
      "var_hierarchique_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}